{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/feed.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,wC;;;;;;;;;;;ACAA,u8CAAu8C,OAAO,6B;;;;;;;;;;;ACA98C,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACgB;AACb;AACC;AACE;AACO;AAET;AAkB7C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE;gBACT,yDAAW;gBACX,wDAAQ;aACT;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;AC1BqB;AACO;AAMlD;IAEE,qBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEN,gCAAU,GAAV,UAAW,GAAG;QACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC;IAEF,+BAAS,GAAT,UAAU,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yEAAyE,EAAE,EAAC,IAAI,QAAC,CAAC,CAAC;IACzG,CAAC;;gBAVe,+DAAU;;IAHf,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIgB,+DAAU;OAHf,WAAW,CAevB;IAAD,kBAAC;CAAA;AAfuB;;;;;;;;;;;;ACPxB,+DAA+D,uI;;;;;;;;;;;;;;;;;;;ACArB;AACS;AACR;AAO3C;IAYE,uBACS,WAAwB,EACvB,QAAkB;QADnB,gBAAW,GAAX,WAAW,CAAa;QACvB,aAAQ,GAAR,QAAQ,CAAU;QAZ5B,YAAO,GAAQ,EAAE,CAAC;QAIlB,YAAO,GAAW,mCAAmC,CAAC;QACtD,YAAO,GAAW,oCAAoC,CAAC;QACvD,YAAO,GAAW,mCAAmC,CAAC;IAOlD,CAAC;IAEL,8BAAM,GAAN,UAAO,IAAI;QAAX,iBAcC;QAbC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,WAAS,IAAM,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/D,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,OAAO,GAAO,KAAI,CAAC,OAAO,QAAK,IAAI,CAAC,CAAC;gBAC1C,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC;gBACnD,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;gBACpB,IAAI,KAAI,CAAC,KAAK,EAAE;oBACd,KAAI,CAAC,KAAK,IAAI,cAAY,IAAM,CAAC;iBAClC;qBAAM;oBACL,KAAI,CAAC,KAAK,GAAG,0CAAwC,IAAM,CAAC;iBAC7D;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAO,GAAP;QACE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;IACzB,CAAC;IAED,+BAAO,GAAP;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;YAChE,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC5C,KAAI,CAAC,KAAK,GAAG,iBAAiB,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,EAAjH,CAAiH,CAAC,CAAC;YAClK,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;SACpD;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACvD;IACH,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,EAAjH,CAAiH,CAAC,CAAC;YAClK,IAAI,CAAC,KAAK,GAAG,oBAAkB,WAAW,CAAC,MAAM,gBAAU,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,sBAAe,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,OAAG,CAAC;YAC3J,WAAW,CAAC,OAAO,CAAC,WAAC,IAAI,YAAI,CAAC,KAAK,IAAO,CAAC,CAAC,IAAI,OAAI,EAA3B,CAA2B,CAAC,CAAC;YACtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;SACtC;IACH,CAAC;;gBApDqB,gEAAW;gBACb,wDAAQ;;IAdjB,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,8IAAoC;;SAErC,CAAC;+EAcsB,gEAAW;YACb,wDAAQ;OAdjB,aAAa,CAkEzB;IAAD,oBAAC;CAAA;AAlEyB;;;;;;;;;;;;;ACT1B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-home></app-home>\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n    <div class=\\\"row\\\">\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"onLoad('A')\\\">Source A</button>\\n        <button class=\\\"btn btn-secondary mx-2\\\" (click)=\\\"onLoad('B')\\\">Source B</button>\\n        <button class=\\\"btn btn-secondary\\\" (click)=\\\"onLoad('C')\\\">Source C</button>\\n        <div *ngIf=\\\"loader\\\" class=\\\"spinner-border ml-5\\\" role=\\\"status\\\">\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n        </div>\\n        <div *ngIf=\\\"cleanData\\\" class=\\\"input-group my-2\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"inputData\\\" placeholder=\\\"Input hotel id or destination id to find hotel\\\" (ngModelChange)=\\\"onChange()\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary\\\" type=\\\"button\\\" (click)=\\\"onSearch()\\\">Search</button>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row my-2\\\">\\n        <textarea id=\\\"textarea\\\" name=\\\"source\\\" cols=\\\"150\\\" rows=\\\"18\\\" placeholder=\\\"Click source button to load data. Or paste json format data here. Then click Clean button to get clean data\\\" [(ngModel)]=\\\"source\\\"></textarea>\\n    </div>\\n    <div class=\\\"row my-2\\\">\\n        <button id=\\\"clean\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onClean()\\\">Clean</button>\\n        <button id=\\\"reset\\\" class=\\\"btn btn-danger ml-2\\\" (click)=\\\"onReset()\\\">Reset</button>\\n        <label class=\\\"ml-5 text-info\\\">{{label}}</label>\\n    </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'flickrUI';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule  } from '@angular/common/http';\nimport { JsonPipe  } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { FeedService } from './feed.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    FeedService,\n    JsonPipe\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\tgetFromApi(url): Observable<any> {\n    console.log(url);\n\t\treturn this.http.get(url);\n  }\n  \n\tpostToApi(data): Observable<any> {\n\t\treturn this.http.post('http://ec2-13-250-179-182.ap-southeast-1.compute.amazonaws.com:3000/api', {data});\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { FeedService } from 'src/app/feed.service';\nimport { JsonPipe } from '@angular/common';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  rawData: any = [];\n  cleanData: any;\n  inputData: string;\n  source: any;\n  sourceA: string = 'https://api.myjson.com/bins/gdmqa';\n  sourceB: string = 'https://api.myjson.com/bins/1fva3m';\n  sourceC: string = 'https://api.myjson.com/bins/j6kzm';\n  loader: boolean;\n  label: string;\n\n  constructor(\n    public feedService: FeedService,\n    private jsonPipe: JsonPipe\n  ) { }\n\n  onLoad(char) {\n    this.loader = true;\n    this.feedService.getFromApi(this[`source${char}`]).subscribe(data => {\n      if (data) {\n        this.rawData = [...this.rawData, ...data];\n        this.source = this.jsonPipe.transform(this.rawData)\n        this.loader = false;\n        if (this.label) {\n          this.label += `, Source ${char}`;\n        } else {\n          this.label = `Following source data merged: Source ${char}`;\n        }\n      }\n    });\n  }\n\n  onReset() {\n    this.source = undefined;\n    this.rawData = [];\n    this.label = undefined;\n  }\n\n  onClean() {\n    this.feedService.postToApi(JSON.parse(this.source)).subscribe(data => {\n      if (data) {\n        this.cleanData = data;\n        this.source = this.jsonPipe.transform(data);\n        this.label = 'Data is cleaned';\n      }\n    });\n  }\n\n  onChange() {\n    if (this.inputData) {\n      const changedData = this.cleanData.filter(e => e.id.toLowerCase().includes(this.inputData.toLowerCase()) || e.destination_id.toString().includes(this.inputData));\n      this.source = this.jsonPipe.transform(changedData);\n    } else {\n      this.source = this.jsonPipe.transform(this.cleanData);\n    }\n  }\n\n  onSearch() {\n    if (this.inputData) {\n      const changedData = this.cleanData.filter(e => e.id.toLowerCase().includes(this.inputData.toLowerCase()) || e.destination_id.toString().includes(this.inputData));\n      this.label = `You have found ${changedData.length} record${changedData.length === 1 ? '' : 's'}. Hotel name${changedData.length === 1 ? ' is' : 's are'} `;\n      changedData.forEach(e => this.label += `${e.name}, `);\n      this.label = this.label.slice(0, -2);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}